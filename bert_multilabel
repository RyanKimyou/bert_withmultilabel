{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'/home/yjkim/new'"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pwd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "%%capture\n",
    "\n",
    "# Package Import and Installation\n",
    "import torch\n",
    "import torch.nn as nn\n",
    "import pandas as pd\n",
    "import os\n",
    "\n",
    "from torch.utils.data import Dataset, DataLoader\n",
    "from torch.nn.utils.rnn import pad_packed_sequence, pack_padded_sequence\n",
    "from tqdm.notebook import tqdm\n",
    "\n",
    "\n",
    "!pip3 install kobert-transformers\n",
    "!pip3 install git+https://git@github.com/SKTBrain/KoBERT.git@master\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/yjkim/anaconda3/envs/allml/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:526: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n",
      "  _np_qint8 = np.dtype([(\"qint8\", np.int8, 1)])\n",
      "/home/yjkim/anaconda3/envs/allml/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:527: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n",
      "  _np_quint8 = np.dtype([(\"quint8\", np.uint8, 1)])\n",
      "/home/yjkim/anaconda3/envs/allml/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:528: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n",
      "  _np_qint16 = np.dtype([(\"qint16\", np.int16, 1)])\n",
      "/home/yjkim/anaconda3/envs/allml/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:529: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n",
      "  _np_quint16 = np.dtype([(\"quint16\", np.uint16, 1)])\n",
      "/home/yjkim/anaconda3/envs/allml/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:530: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n",
      "  _np_qint32 = np.dtype([(\"qint32\", np.int32, 1)])\n",
      "/home/yjkim/anaconda3/envs/allml/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:535: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n",
      "  np_resource = np.dtype([(\"resource\", np.ubyte, 1)])\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CUDA AVAILABLE:  True\n"
     ]
    }
   ],
   "source": [
    "from kobert_transformers import get_distilkobert_model, get_tokenizer\n",
    "\n",
    "# Import Data\n",
    "\n",
    "\n",
    "# CUDA\n",
    "print(\"CUDA AVAILABLE: \", torch.cuda.is_available())\n",
    "DEVICE = 'cuda:0' if torch.cuda.is_available() else 'cpu'\n",
    "\n",
    "tokenizer = get_tokenizer()\n",
    "KoBERT    = get_distilkobert_model()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Need PAD_ID for data preprocessing\n",
    "PAD_ID = tokenizer.pad_token_id\n",
    "SEP_ID = tokenizer.sep_token_id\n",
    "CLS_ID = tokenizer.cls_token_id\n",
    "\n",
    "# Hyperparameters\n",
    "hyperparams = {'num_epochs': 3,\n",
    "               'batch_size': 32,\n",
    "               'seq_len'   : 200,\n",
    "               'learn_rate': 2e-5}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[2408, 2046, 7086, 3394, 1900, 6431, 6116, 3840, 7078, 517, 7815, 4841, 7223, 3415, 7843, 54] \n",
      " ['▁본', '▁모델', '은', '▁영화', '▁리', '뷰', '를', '▁입력', '으로', '▁', '하여', '▁평', '점을', '▁예측', '합니다', '.']\n"
     ]
    }
   ],
   "source": [
    "# Demonstration of KoBERT Tokenizer\n",
    "ex_sentence = \"본 모델은 영화 리뷰를 입력으로 하여 평점을 예측합니다.\"\n",
    "ex_tokenize = tokenizer.tokenize(ex_sentence)\n",
    "tokenized   = tokenizer.convert_tokens_to_ids(ex_tokenize)\n",
    "untokenized = tokenizer.convert_ids_to_tokens(tokenized)\n",
    "print(tokenized, '\\n', untokenized)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "8002"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tokenizer.vocab_size"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "class MovieDataset(Dataset):\n",
    "    def __init__(self, tokenizer, input_file, label_file, seq_len=64):\n",
    "        super().__init__()\n",
    "        \n",
    "        self.label_file = label_file\n",
    "        self.seq_len = seq_len\n",
    "        self.inputs  = open(input_file, 'r').read().splitlines()\n",
    "        if label_file is not None:\n",
    "            self.labels = open(label_file, 'r').read().splitlines()\n",
    "\n",
    "        \n",
    "\n",
    "    def __len__(self):\n",
    "        return len(self.inputs)\n",
    "\n",
    "    def __getitem__(self, idx):\n",
    "        # Convert to tokens then augment tags\n",
    "        tokens = tokenizer.convert_tokens_to_ids(tokenizer.tokenize(self.inputs[idx]))\n",
    "        padded = [CLS_ID] + tokens[:self.seq_len-2] + [SEP_ID] + [PAD_ID] * (self.seq_len - len(tokens) - 2)\n",
    "        length = len(tokens[:self.seq_len-2])\n",
    "        if self.label_file is not None:\n",
    "            labels = int(self.labels[idx])\n",
    "            return {'inputs': torch.tensor(padded),\n",
    "                    'labels': torch.tensor(labels),\n",
    "                    'length': torch.tensor(length)}\n",
    "        else:\n",
    "            return {'inputs': torch.tensor(padded),\n",
    "                    'length': torch.tensor(length)}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_ds = MovieDataset(tokenizer, 'train_data', 'train_label', seq_len=hyperparams['seq_len'])\n",
    "valid_ds = MovieDataset(tokenizer, 'valid_data', 'valid_label', seq_len=hyperparams['seq_len'])\n",
    "test_ds  = MovieDataset(tokenizer, 'test_data', None, seq_len=hyperparams['seq_len'])\n",
    "\n",
    "train_loader = DataLoader(train_ds, batch_size=hyperparams['batch_size'], shuffle=True)\n",
    "valid_loader = DataLoader(valid_ds, batch_size=128)\n",
    "test_loader  = DataLoader(test_ds,  batch_size=128)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'불멸의 명작. 영화인을 꿈꾸는 사람이라면 반드시 봐야할 영화'"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_ds.inputs[1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'10'"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_ds.labels[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'inputs': tensor([   2, 2288, 7089,  517,  422,  453,  389,  708,  423,  389, 7095,  791,\n",
       "         7206, 2734, 7069, 5468, 3376, 6493, 5561, 6903, 1390, 1597, 7543, 7828,\n",
       "         4694, 3960, 5938, 2355, 6197, 4737, 7628, 7095, 5152, 6527, 6896,  517,\n",
       "         7233, 7086, 5943, 7828, 3194, 7172, 7828, 4883, 4299, 5859,  517, 7145,\n",
       "         7088, 6630, 3273,   54,    3,    1,    1,    1,    1,    1,    1,    1,\n",
       "            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n",
       "            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n",
       "            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n",
       "            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n",
       "            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n",
       "            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n",
       "            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n",
       "            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n",
       "            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n",
       "            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n",
       "            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n",
       "            1,    1,    1,    1,    1,    1,    1,    1]),\n",
       " 'labels': tensor(10),\n",
       " 'length': tensor(51)}"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_ds[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Model\n",
    "class MovieReviewModel(nn.Module):\n",
    "    def __init__(self):\n",
    "        super().__init__()\n",
    "        # nn.CrossEntropyLoss in torch has built-in softmax. No need for activation.\n",
    "        self.pretrained = KoBERT.to(DEVICE)\n",
    "        self.linear     = nn.Linear(768, 10).to(DEVICE)\n",
    "        \n",
    "    def forward(self, x):\n",
    "        # Pretrained Model Output -> (Embedding, Pooled)\n",
    "        x, = self.pretrained(x)\n",
    "        x  = self.linear(x[:,0])\n",
    "\n",
    "        return x\n",
    "\n",
    "model = MovieReviewModel()\n",
    "\n",
    "# Loss\n",
    "loss_func = nn.CrossEntropyLoss(ignore_index=PAD_ID)\n",
    "\n",
    "# Optimizer\n",
    "optimizer = torch.optim.Adam(params=model.parameters(), lr=hyperparams['learn_rate'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Validating\n",
    "def validate(model, valid_loader):\n",
    "    model.eval()\n",
    "    s, t = 0, 0\n",
    "    with torch.no_grad():\n",
    "        for batch in tqdm(valid_loader):\n",
    "            x = batch['inputs'].to(DEVICE)\n",
    "            y = batch['labels'].cpu()\n",
    "            q = batch['length']\n",
    "\n",
    "            if type(model) == MovieReviewModel:\n",
    "                z = model(x).cpu()\n",
    "            else:\n",
    "                z = model(x, q).cpu()\n",
    "            p = torch.argmax(z, dim=-1).cpu() + 1\n",
    "\n",
    "            s += torch.sum(y==p, [-1,0]).item()\n",
    "            t += len(x)\n",
    "\n",
    "        print('VALIDATION ACCURACY: %.2f %%' % (s / t * 100))\n",
    "\n",
    "# Finetuning\n",
    "def finetune(model, train_loader):\n",
    "    model.train()\n",
    "    t = 0\n",
    "    for i, batch in enumerate(tqdm(train_loader)):\n",
    "        x = batch['inputs'].to(DEVICE)\n",
    "        y = batch['labels'].cpu() - 1\n",
    "        z = model(x).cpu()\n",
    "\n",
    "        l = loss_func(z, y)\n",
    "        t += l.item()\n",
    "        \n",
    "        optimizer.zero_grad()\n",
    "        l.backward()\n",
    "        optimizer.step()\n",
    "        \n",
    "        # Print train loss, save model, and validate every 1000 steps\n",
    "        if not (i % 1000):\n",
    "            print('BATCH %d of %d TRAIN LOSS: %.3f' % (i, len(train_loader), l))\n",
    "            print('SAVING MODEL ...')\n",
    "            torch.save(model.state_dict(), 'checkpoint.pt')\n",
    "            validate(model, valid_loader)\n",
    "            model.train()\n",
    "\n",
    "    print('TRAIN LOSS: %.3f' % t)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "******* EPOCH 1 / 3 ********\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "d2269a057ad04894a45ad3c2904ddd78",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=281250.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "BATCH 0 of 281250 TRAIN LOSS: 2.370\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "a8cd8a00a8874255846e20c1ff6ec685",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 60.52 %\n",
      "BATCH 1000 of 281250 TRAIN LOSS: 1.094\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "22109e0cc45a42d59c1a3891450a2a6e",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 76.94 %\n",
      "BATCH 2000 of 281250 TRAIN LOSS: 1.585\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "dfa8c4a7f91a4906bdafaa6d07383781",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 78.15 %\n",
      "BATCH 3000 of 281250 TRAIN LOSS: 1.323\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "e88caf1381e843baa0ccc876daf465b1",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 79.13 %\n",
      "BATCH 4000 of 281250 TRAIN LOSS: 1.289\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "f9480146fdf74d33a533f23ab8371059",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 79.47 %\n",
      "BATCH 5000 of 281250 TRAIN LOSS: 1.093\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "9845b824bcec441a9cb3049cd327fd4d",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 79.94 %\n",
      "BATCH 6000 of 281250 TRAIN LOSS: 1.140\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "d127b0edf22c4ee68fc28027c68bb81c",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 80.31 %\n",
      "BATCH 7000 of 281250 TRAIN LOSS: 1.198\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "465e89e9c05e42cc809a65843a3a53ba",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 80.10 %\n",
      "BATCH 8000 of 281250 TRAIN LOSS: 1.496\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "bfc429a52e004f9fbdae8ad07fd3a2ac",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 80.39 %\n",
      "BATCH 9000 of 281250 TRAIN LOSS: 1.263\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "a7c6759af1434b55a86c0e08dc6ab7e9",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 80.17 %\n",
      "BATCH 10000 of 281250 TRAIN LOSS: 1.046\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "b02e27082642490389b26d5e0fba51d5",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 80.16 %\n",
      "BATCH 11000 of 281250 TRAIN LOSS: 1.382\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "50dc2af34207444bac078b7fefeb48e8",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 80.94 %\n",
      "BATCH 12000 of 281250 TRAIN LOSS: 1.126\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "70bacd3fa2884112aebc6a994684b6ad",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 80.42 %\n",
      "BATCH 13000 of 281250 TRAIN LOSS: 1.280\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "006181c41e48413588877b0ca45bf247",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 80.65 %\n",
      "BATCH 14000 of 281250 TRAIN LOSS: 1.065\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "d3ec07ea4712496da741c3bcd6df6c4c",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 80.81 %\n",
      "BATCH 15000 of 281250 TRAIN LOSS: 0.854\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "a88441d76e6c46cb8eeb6f6466b7d43a",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 80.56 %\n",
      "BATCH 16000 of 281250 TRAIN LOSS: 0.847\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "1a720697efbe4ee28befe3567f4bba7b",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 81.06 %\n",
      "BATCH 17000 of 281250 TRAIN LOSS: 1.047\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "aec1d27aeff44b5f8e79d97a12200965",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 80.73 %\n",
      "BATCH 18000 of 281250 TRAIN LOSS: 1.269\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "0382af56c1f744ae875a81532212d3eb",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 80.97 %\n",
      "BATCH 19000 of 281250 TRAIN LOSS: 1.438\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "be206a6d75df45c68d4ea3700cb78b37",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 81.20 %\n",
      "BATCH 20000 of 281250 TRAIN LOSS: 1.325\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "7f47b65dd07a4c14812820b541d62118",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 81.43 %\n",
      "BATCH 21000 of 281250 TRAIN LOSS: 1.335\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "e2a38708656e4fadba576aaeecca0a99",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 81.09 %\n",
      "BATCH 22000 of 281250 TRAIN LOSS: 1.444\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "55efa3304aac42db8b7bcfdbd167af91",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 81.67 %\n",
      "BATCH 23000 of 281250 TRAIN LOSS: 0.847\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "c49cce1238a5416a8a1763f83f7f366b",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 81.72 %\n",
      "BATCH 24000 of 281250 TRAIN LOSS: 1.140\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "4c694389b45c4472bc97c38de0416e0d",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 81.53 %\n",
      "BATCH 25000 of 281250 TRAIN LOSS: 1.303\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "308131e187a1491bafb16c2e7979d21e",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 81.65 %\n",
      "BATCH 26000 of 281250 TRAIN LOSS: 0.893\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "85fd27750ca54552ab9f3424f281fddb",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 81.38 %\n",
      "BATCH 27000 of 281250 TRAIN LOSS: 1.302\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "46239b4a7b394aa98f54495b643c002f",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 81.83 %\n",
      "BATCH 28000 of 281250 TRAIN LOSS: 1.328\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "a9d34a0933ce47f3ba050708719e59ea",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 81.44 %\n",
      "BATCH 29000 of 281250 TRAIN LOSS: 1.025\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "493ee7bfc1cb4cd7ae12866ea4f32cd9",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 81.81 %\n",
      "BATCH 30000 of 281250 TRAIN LOSS: 1.244\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "8e04a79607a741ceb3b63ee53d1b5b82",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 81.90 %\n",
      "BATCH 31000 of 281250 TRAIN LOSS: 1.037\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "4c04b9bfdbc4465c91bfecfa8eb2a645",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 81.64 %\n",
      "BATCH 32000 of 281250 TRAIN LOSS: 1.124\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "64487c5766f24069a04d7ad25e6fb3e3",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 81.54 %\n",
      "BATCH 33000 of 281250 TRAIN LOSS: 0.951\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "2f04bf4d9e2c49cea2afd4d12fd91e2f",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 81.82 %\n",
      "BATCH 34000 of 281250 TRAIN LOSS: 1.419\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "fdf6a96a58924cf89d7c60d719852e4c",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 81.77 %\n",
      "BATCH 35000 of 281250 TRAIN LOSS: 1.108\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "a1ad5ae1664c489f8209e5e647e29481",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 81.78 %\n",
      "BATCH 36000 of 281250 TRAIN LOSS: 0.893\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "7c5816db7970442cbaccd6df32ae2894",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.01 %\n",
      "BATCH 37000 of 281250 TRAIN LOSS: 1.207\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "16bb2434ab634a5a8110dd6f4cfed05c",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 81.92 %\n",
      "BATCH 38000 of 281250 TRAIN LOSS: 1.432\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "c40bd6b4665a4be59bf137ba3eb559b6",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 81.97 %\n",
      "BATCH 39000 of 281250 TRAIN LOSS: 1.120\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "4e8616dc08e645f1a48580855548f47a",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 81.92 %\n",
      "BATCH 40000 of 281250 TRAIN LOSS: 0.994\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "785f0aad9c534009b22d67b9c48c5f84",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.13 %\n",
      "BATCH 41000 of 281250 TRAIN LOSS: 1.061\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "b942b5c2465c4585b290d24b962dcdf4",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.26 %\n",
      "BATCH 42000 of 281250 TRAIN LOSS: 1.100\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "ceb3f50055b7488f842cf19d0dd29697",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 81.73 %\n",
      "BATCH 43000 of 281250 TRAIN LOSS: 1.177\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "b593d61d658c4ec686375705f6c464c2",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.09 %\n",
      "BATCH 44000 of 281250 TRAIN LOSS: 1.218\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "73bb3289947c47cd9518974655fd165a",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.04 %\n",
      "BATCH 45000 of 281250 TRAIN LOSS: 0.915\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "bdaadf9465894f4ab1237a8bfdd4da67",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.22 %\n",
      "BATCH 46000 of 281250 TRAIN LOSS: 1.279\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "210402541c5a4c48a3f1db883c12e5c7",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 81.92 %\n",
      "BATCH 47000 of 281250 TRAIN LOSS: 1.392\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "1f3596e09c27440dadbd3dc5b7fcb48c",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.22 %\n",
      "BATCH 48000 of 281250 TRAIN LOSS: 0.809\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "96eb8c6b45084319b89bae22313cbddb",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.10 %\n",
      "BATCH 49000 of 281250 TRAIN LOSS: 1.153\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "d277a35963a041bbbf520336ee43a7f5",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.15 %\n",
      "BATCH 50000 of 281250 TRAIN LOSS: 1.507\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "cd10ab60a5e14d7bacc7e4205fe519a5",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.17 %\n",
      "BATCH 51000 of 281250 TRAIN LOSS: 1.408\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "029636f3bb234215b788675164dac067",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.21 %\n",
      "BATCH 52000 of 281250 TRAIN LOSS: 1.479\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "68452a07684a4f39a396b3348fc6b803",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.09 %\n",
      "BATCH 53000 of 281250 TRAIN LOSS: 1.069\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "5bff066d525544f9807d19312a9e59d2",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.44 %\n",
      "BATCH 54000 of 281250 TRAIN LOSS: 1.394\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "f1b44aa449b54c2da3da2bda1a924df3",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.37 %\n",
      "BATCH 55000 of 281250 TRAIN LOSS: 1.056\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "c0690f4d3919497790c5cc0fe2aea940",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.31 %\n",
      "BATCH 56000 of 281250 TRAIN LOSS: 0.862\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "616f8786d31541d8b394e911e7b1e3b9",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.28 %\n",
      "BATCH 57000 of 281250 TRAIN LOSS: 1.028\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "fe837851f9d24d51ae0921b03f44138c",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.38 %\n",
      "BATCH 58000 of 281250 TRAIN LOSS: 0.930\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "5529d6e85f284c0685828ff905a92dcd",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.38 %\n",
      "BATCH 59000 of 281250 TRAIN LOSS: 0.746\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "16ae57b9002b4663a0b2b0d4e366da7e",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.03 %\n",
      "BATCH 60000 of 281250 TRAIN LOSS: 1.759\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "6160f6736815418b997fdfb98e1fb770",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.35 %\n",
      "BATCH 61000 of 281250 TRAIN LOSS: 0.916\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "d4050a64376b427bb7f628d980158e70",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.08 %\n",
      "BATCH 62000 of 281250 TRAIN LOSS: 1.074\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "3c0b0b4a781149c4a8d55a3aedec0a43",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.47 %\n",
      "BATCH 63000 of 281250 TRAIN LOSS: 1.135\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "7d28b349fd944aa5920356bc0a8cd0f8",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.38 %\n",
      "BATCH 64000 of 281250 TRAIN LOSS: 1.153\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "a682bf8d5a744991901204dbb42e63e1",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.17 %\n",
      "BATCH 65000 of 281250 TRAIN LOSS: 1.149\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "8dfbc8ad542e40869cde0bb088355bc7",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.30 %\n",
      "BATCH 66000 of 281250 TRAIN LOSS: 1.449\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "5f12a2885edf48178be7e622f4e0241d",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.42 %\n",
      "BATCH 67000 of 281250 TRAIN LOSS: 0.978\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "130f8bf8d5844b8dbb98c185cb85baad",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.34 %\n",
      "BATCH 68000 of 281250 TRAIN LOSS: 1.172\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "f66d7398d78d414baf66063b4de4a2ba",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.50 %\n",
      "BATCH 69000 of 281250 TRAIN LOSS: 0.919\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "df8d0602e8de424bbf647520eb971b15",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.26 %\n",
      "BATCH 70000 of 281250 TRAIN LOSS: 1.256\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "b31858d8f2b04f69aacfb4dbe8909e06",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.63 %\n",
      "BATCH 71000 of 281250 TRAIN LOSS: 0.966\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "91681f6ed2f74a4eb50cea06d9218037",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.39 %\n",
      "BATCH 72000 of 281250 TRAIN LOSS: 1.050\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "f7a5efc614604b8686bbd009a4c735a6",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.55 %\n",
      "BATCH 73000 of 281250 TRAIN LOSS: 1.002\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "d1060c56a56847f984d9a37c8bad3dc0",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.61 %\n",
      "BATCH 74000 of 281250 TRAIN LOSS: 0.989\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "116d1e560eef432ab651aede40494d84",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.39 %\n",
      "BATCH 75000 of 281250 TRAIN LOSS: 0.928\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "5daf74f3fd0a46f38eb8e94978835b5c",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.57 %\n",
      "BATCH 76000 of 281250 TRAIN LOSS: 0.992\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "d34db181bdee47e5b32ef9b9dfcd98ef",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.50 %\n",
      "BATCH 77000 of 281250 TRAIN LOSS: 1.188\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "2097567fb32e4a609763dee2bc9fb1ac",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.76 %\n",
      "BATCH 78000 of 281250 TRAIN LOSS: 1.022\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "17e0ab4aca69474e9f0b6308cf88834a",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.49 %\n",
      "BATCH 79000 of 281250 TRAIN LOSS: 0.684\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "285d7f49cb15413794633b5be7a0aa95",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.57 %\n",
      "BATCH 80000 of 281250 TRAIN LOSS: 1.094\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "ac1ee8102563428985d771c1a60f24f5",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.71 %\n",
      "BATCH 81000 of 281250 TRAIN LOSS: 0.934\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "5ba6c3fb1e8a4def8726f665f028078f",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.74 %\n",
      "BATCH 82000 of 281250 TRAIN LOSS: 0.998\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "2474b7073f754b4ea0f916e98becc87f",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.71 %\n",
      "BATCH 83000 of 281250 TRAIN LOSS: 1.090\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "3ebc7dad569d4b7bb542f54775ec1bb5",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.54 %\n",
      "BATCH 84000 of 281250 TRAIN LOSS: 1.222\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "a24211466cac4514b6dfb95cdb4f0902",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.36 %\n",
      "BATCH 85000 of 281250 TRAIN LOSS: 1.281\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "ed05958a7f0640ad98d1d9029e5eea75",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.58 %\n",
      "BATCH 86000 of 281250 TRAIN LOSS: 1.227\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "ae40f678fa7d4ca88584a436d999500e",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.71 %\n",
      "BATCH 87000 of 281250 TRAIN LOSS: 0.917\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "86bf0f90d19a4b7e88c768d7c33f859d",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.75 %\n",
      "BATCH 88000 of 281250 TRAIN LOSS: 0.874\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "02a18b15fb9e4ce59ef24c98dd5b954b",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.57 %\n",
      "BATCH 89000 of 281250 TRAIN LOSS: 1.266\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "03c3f94bb4714ed686951c81e31049fa",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.52 %\n",
      "BATCH 90000 of 281250 TRAIN LOSS: 1.242\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "7b90fce767c541c2a8ded3bb527b1727",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.49 %\n",
      "BATCH 91000 of 281250 TRAIN LOSS: 0.827\n",
      "SAVING MODEL ...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "1c9dbc9ec46b47a184f10fd57f2a2840",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=79.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "VALIDATION ACCURACY: 82.69 %\n"
     ]
    }
   ],
   "source": [
    "# if os.path.exists('checkpoint.pt'):\n",
    "#     model.load_state_dict(torch.load('checkpoint.pt'))\n",
    "#     model.to(DEVICE)\n",
    "# else:\n",
    " \n",
    "\n",
    "for e in range(hyperparams['num_epochs']):\n",
    "    print('******* EPOCH %d / %d ********' % (e+1, hyperparams['num_epochs']))\n",
    "    finetune(model, train_loader)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "def test(model, test_loader):\n",
    "    model.eval()\n",
    "    output = []\n",
    "    for i, batch in enumerate(tqdm(test_loader)):\n",
    "        x = batch['inputs'].to(DEVICE)\n",
    "        z = model(x)\n",
    "        p = torch.argmax(z, dim=-1).cpu() + 1\n",
    "        l = [i.item() for i in p.flatten()]\n",
    "        output.extend(l)\n",
    "\n",
    "    return output"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "994ea0a0092344c5b6ba6b4fddfde888",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(FloatProgress(value=0.0, max=200000.0), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "# Load model and run test\n",
    "model.load_state_dict(torch.load('checkpoint.pt'))\n",
    "model.to(DEVICE)\n",
    "l = test(model, test_loader)\n",
    "\n",
    "dic = {'ID': [i for i in range(len(l))], 'Prediction': l}\n",
    "df = pd.DataFrame(dic)\n",
    "df.to_csv('submission.csv', index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 테스트 배치사이즈 안맞을시"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "test_loader  = DataLoader(test_ds,  batch_size=2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "EasyDeep",
   "language": "python",
   "name": "easydeep"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
